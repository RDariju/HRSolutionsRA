@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Employee Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var employeeList = (IEnumerable<dynamic>)ViewBag.EmployeeList;
}
@model HRSolutions.Models.Employee
<style>
    .profile-content {
        width: 80%;
        margin: 20px auto;
        background: white;
        padding: 20px;
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
        border-radius: 8px;
        font-family: 'Segoe UI', sans-serif;
    }

    .search-bar {
        display: flex;
        justify-content: space-between;
        background: #f0f0f0;
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 25px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.05);
    }

    .search-form {
        display: flex;
        width: 100%;
        gap: 10px;
    }

        .search-form input {
            flex: 1;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            outline: none;
            transition: border-color 0.3s;
        }

            .search-form input:focus {
                border-color: #3498db;
            }

    .search-btn {
        background: #3498db;
        border: none;
        color: white;
        padding: 10px 20px;
        cursor: pointer;
        border-radius: 4px;
        font-weight: 500;
        transition: background 0.3s;
    }

        .search-btn:hover {
            background: #2980b9;
        }

    .profile-header {
        text-align: center;
        margin-bottom: 30px;
        position: relative;
    }

    .profile-image-container {
        position: relative;
        width: 150px;
        height: 150px;
        margin: 0 auto 15px;
    }

    .profile-avatar {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        object-fit: cover;
        border: 3px solid #3498db;
        box-shadow: 0 3px 10px rgba(0,0,0,0.1);
    }

    .employee-name {
        font-size: 24px;
        margin: 10px 0 5px;
        color: #333;
    }

    .employee-position {
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 5px;
    }

    .employee-id-badge {
        background: #3498db;
        color: white;
        padding: 5px 15px;
        border-radius: 20px;
        font-size: 14px;
        font-weight: 500;
        display: inline-block;
        margin-top: 5px;
    }

    .job-title {
        font-size: 18px;
        color: #666;
        margin: 5px 0;
    }

    section {
        background: #f9f9f9;
        padding: 20px;
        margin-bottom: 25px;
        border-radius: 8px;
        border: 1px solid #eaeaea;
        box-shadow: 0 2px 5px rgba(0,0,0,0.05);
    }

    h3 {
        display: flex;
        justify-content: space-between;
        align-items: center;
        background: #f0f0f0;
        padding: 12px 15px;
        margin: -20px -20px 15px -20px;
        border-radius: 8px 8px 0 0;
        font-size: 16px;
        font-weight: 600;
        color: #444;
        border-bottom: 2px solid #e0e0e0;
    }

    .edit-btn {
        background: #3498db;
        color: white;
        padding: 6px 12px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
        transition: background 0.3s;
    }

        .edit-btn:hover {
            background: #2980b9;
        }

    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 15px;
    }

    .info-item {
        margin-bottom: 15px;
        padding: 12px;
        background-color: #fff;
        border-radius: 6px;
        box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        border: 1px solid #e0e0e0;
    }

    .info-label {
        font-weight: 600;
        color: #3498db;
        margin-right: 5px;
        display: block;
        margin-bottom: 5px;
        font-size: 14px;
    }

    .info-value {
        font-size: 16px;
        color: #333;
        word-break: break-word;
    }

    input, select {
        padding: 8px;
        margin: 5px 0;
        width: 100%;
        box-sizing: border-box;
        border: 1px solid #ddd;
        border-radius: 4px;
        background-color: #f9f9f9;
    }

        input[readonly] {
            background-color: #f5f5f5;
            color: #666;
        }

    .profile-completion {
        text-align: center;
        margin-top: 20px;
        padding: 15px;
        background: #f0f8ff;
        border-radius: 8px;
    }

    .progress-circle {
        width: 80px;
        height: 80px;
        background: linear-gradient(to right, #3498db, #2980b9);
        color: white;
        text-align: center;
        border-radius: 50%;
        line-height: 80px;
        font-weight: bold;
        margin: auto;
        box-shadow: 0 3px 10px rgba(0,0,0,0.1);
    }

    .progress-options span {
        display: inline-block;
        margin: 10px 5px;
        padding: 5px 15px;
        background: #e0e0e0;
        border-radius: 20px;
        font-size: 14px;
        color: #555;
        transition: background 0.3s;
    }

        .progress-options span:hover {
            background: #d0d0d0;
        }

    .employee-not-found {
        text-align: center;
        padding: 50px 20px;
        background: #fff9f9;
        border-radius: 8px;
        border: 1px solid #ffdddd;
        color: #d32f2f;
        font-size: 18px;
        margin: 20px auto;
        width: 80%;
        box-shadow: 0 2px 5px rgba(0,0,0,0.05);
    }

    .search-instruction {
        text-align: center;
        padding: 40px 20px;
        background: #f0f8ff;
        border-radius: 8px;
        border: 1px solid #cce5ff;
        color: #0c5460;
        font-size: 18px;
        margin: 20px auto;
        width: 80%;
        box-shadow: 0 2px 5px rgba(0,0,0,0.05);
    }
</style>


<div class="search-bar">
    <form method="get" asp-action="ViewEmployee" asp-controller="Employee" class="search-form">
        <input type="text" name="firstName" placeholder="First Name"
               value="@(Context.Request.Query["firstName"].ToString())" required />
        <input type="text" name="lastName" placeholder="Last Name"
               value="@(Context.Request.Query["lastName"].ToString())" required />
        <button type="submit" class="search-btn">Search</button>
    </form>
</div>
@if (Model != null)
{
    var emp = Model;

    <div class="profile-content">
        <div class="profile-header">
            <div class="profile-image-container">
                @if (emp.ProfileImage != null)
                {
                    <img src="data:image/png;base64,@Convert.ToBase64String(emp.ProfileImage)" alt="Profile Image" class="profile-avatar" />
                }
                else
                {
                    <img src="https://via.placeholder.com/150" alt="Profile Image" class="profile-avatar" />
                }
            </div>
            <h2 class="employee-name">@emp.PreferredName</h2>
            <div class="employee-position">
                <p class="job-title">@emp.JobRole</p>
            </div>
            <div class="employee-id-badge">
                ID: @emp.empId
            </div>
        </div>

        <section class="basic-info">
            <h3>Basic Information</h3>
            <div class="info-grid">
                <div class="info-item">
                    <span class="info-label">Title</span>
                    <div class="info-value">@emp.Title</div>
                </div>
                <div class="info-item">
                    <span class="info-label">Initials</span>
                    <div class="info-value">@emp.Initials</div>
                </div>
                <div class="info-item">
                    <span class="info-label">First Name</span>
                    <div class="info-value">@emp.FirstName</div>
                </div>
                <div class="info-item">
                    <span class="info-label">Middle Name</span>
                    <div class="info-value">@emp.MiddleName</div>
                </div>
                <div class="info-item">
                    <span class="info-label">Last Name</span>
                    <div class="info-value">@emp.LastName</div>
                </div>
                <div class="info-item">
                    <span class="info-label">Preferred Name</span>
                    <div class="info-value">@emp.PreferredName</div>
                </div>
                <div class="info-item">
                    <span class="info-label">Date of Birth</span>
                    <div class="info-value">@emp.DateOfBirth.ToString("yyyy/MM/dd")</div>
                </div>
                <div class="info-item">
                    <span class="info-label">Gender</span>
                    <div class="info-value">@emp.Gender</div>
                </div>
                <div class="info-item">
                    <span class="info-label">Marital Status</span>
                    <div class="info-value">@emp.MaritalStatus</div>
                </div>
                <div class="info-item">
                    <span class="info-label">Blood Group</span>
                    <div class="info-value">@emp.BloodGroup</div>
                </div>
                <div class="info-item">
                    <span class="info-label">Race</span>
                    <div class="info-value">@emp.Race</div>
                </div>
            </div>
        </section>

        <section class="identification-info">
            <h3>Identification Information</h3>
            <div class="info-grid">
                <div class="info-item">
                    <span class="info-label">NIC Number</span>
                    <div class="info-value">@emp.NICNumber</div>
                </div>
                <div class="info-item">
                    <span class="info-label">Passport Number</span>
                    <div class="info-value">@(string.IsNullOrEmpty(emp.PassportNumber) ? "Not Available" : emp.PassportNumber)</div>
                </div>
                <div class="info-item">
                    <span class="info-label">Passport Expiry Date</span>
                    <div class="info-value">@(emp.PassportExpiryDate.HasValue ? emp.PassportExpiryDate.Value.ToString("yyyy/MM/dd") : "Not Available")</div>
                </div>
            </div>
        </section>

        <section class="contact-info">
            <h3>Contact Information</h3>
            <div class="info-grid">
                <div class="info-item">
                    <span class="info-label">Street 1</span>
                    <div class="info-value">@(string.IsNullOrEmpty(emp.Street1) ? "Not Available" : emp.Street1)</div>
                </div>
                <div class="info-item">
                    <span class="info-label">Street 2</span>
                    <div class="info-value">@(string.IsNullOrEmpty(emp.Street2) ? "Not Available" : emp.Street2)</div>
                </div>
                <div class="info-item">
                    <span class="info-label">City</span>
                    <div class="info-value">@(string.IsNullOrEmpty(emp.City) ? "Not Available" : emp.City)</div>
                </div>
                <div class="info-item">
                    <span class="info-label">ZIP Code</span>
                    <div class="info-value">@(string.IsNullOrEmpty(emp.ZIPCode) ? "Not Available" : emp.ZIPCode)</div>
                </div>
                <div class="info-item">
                    <span class="info-label">State</span>
                    <div class="info-value">@(string.IsNullOrEmpty(emp.State) ? "Not Available" : emp.State)</div>
                </div>
                <div class="info-item">
                    <span class="info-label">Country</span>
                    <div class="info-value">@(string.IsNullOrEmpty(emp.Country) ? "Not Available" : emp.Country)</div>
                </div>
                <div class="info-item">
                    <span class="info-label">Mobile</span>
                    <div class="info-value">@emp.MobileNumber</div>
                </div>
                <div class="info-item">
                    <span class="info-label">Land Line</span>
                    <div class="info-value">@(string.IsNullOrEmpty(emp.LandLine) ? "Not Available" : emp.LandLine)</div>
                </div>
                <div class="info-item">
                    <span class="info-label">Email</span>
                    <div class="info-value">@emp.PersonalEmail</div>
                </div>
            </div>
        </section>
    </div>
}
else if (!string.IsNullOrEmpty(Context.Request.Query["firstName"]) && !string.IsNullOrEmpty(Context.Request.Query["lastName"]))
{
    <div class="employee-not-found">
        <i class="fas fa-user-slash"></i>
        <p>Employee not found. Please check the first and last name and try again.</p>
    </div>
}
else
{
    <div class="search-instruction">
        <i class="fas fa-search"></i>
        <p>Please enter an employee's first and last name to view their profile.</p>
    </div>
}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const editButtons = document.querySelectorAll(".edit-btn");

        editButtons.forEach((btn) => {
            btn.addEventListener("click", function () {
                alert("Edit feature for this section is under development!");
            });
        });

        const searchInput = document.querySelector(".search-bar input");
        searchInput.addEventListener("keypress", function (e) {
            if (e.key === "Enter") {
                alert("Searching for: " + searchInput.value);
            }
        });
    });
</script>